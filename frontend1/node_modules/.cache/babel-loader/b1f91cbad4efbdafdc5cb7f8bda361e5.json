{"ast":null,"code":"import e, { useEffect as t, useState as n, useRef as r } from \"react\";\nimport i from \"@babel/runtime/helpers/taggedTemplateLiteral\";\nimport o from \"styled-components\";\nimport a from \"@babel/runtime/helpers/extends\";\nimport l from \"@babel/runtime/helpers/slicedToArray\";\nimport c from \"@babel/runtime/helpers/toConsumableArray\";\nimport { animated as s, useSpring as u, to as f, useSprings as p, config as m, useTransition as g } from \"@react-spring/web\";\nimport { useGesture as d } from \"react-use-gesture\";\nimport v from \"@babel/runtime/helpers/defineProperty\";\nimport h from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport y from \"@babel/runtime/helpers/classCallCheck\";\nimport b from \"@babel/runtime/helpers/createClass\";\nimport w from \"@babel/runtime/helpers/assertThisInitialized\";\nimport O from \"@babel/runtime/helpers/inherits\";\nimport x from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport C from \"@babel/runtime/helpers/getPrototypeOf\";\nimport P from \"react-dom\";\n\nvar E,\n    k = function (e) {\n  var t,\n      n = e.imageRef,\n      r = e.scale,\n      i = e.pinchDelta,\n      o = l(e.touchOrigin, 2),\n      a = o[0],\n      c = o[1],\n      s = l(e.currentTranslate, 2),\n      u = s[0],\n      f = s[1];\n  if (null == n || !n.current) return [0, 0];\n  var p = null === (t = n.current) || void 0 === t ? void 0 : t.getBoundingClientRect(),\n      m = p.height,\n      g = p.left,\n      d = p.top;\n  return [-((a - g - p.width / 2) / r) * i + u, -((c - d - m / 2) / r) * i + f];\n},\n    D = function (e) {\n  var t;\n  if (!e.current) return !1;\n  var n = null === (t = e.current) || void 0 === t ? void 0 : t.getBoundingClientRect(),\n      r = n.bottom,\n      i = n.left,\n      o = n.right,\n      a = n.top,\n      l = window,\n      c = l.innerHeight,\n      s = l.innerWidth;\n  return i > .5 * s || a > .5 * c || o < .5 * s || r < .5 * c;\n},\n    T = [\"style\"];\n\nfunction j(e, t) {\n  var n = Object.keys(e);\n\n  if (Object.getOwnPropertySymbols) {\n    var r = Object.getOwnPropertySymbols(e);\n    t && (r = r.filter(function (t) {\n      return Object.getOwnPropertyDescriptor(e, t).enumerable;\n    })), n.push.apply(n, r);\n  }\n\n  return n;\n}\n\nfunction I(e) {\n  for (var t = 1; t < arguments.length; t++) {\n    var n = null != arguments[t] ? arguments[t] : {};\n    t % 2 ? j(Object(n), !0).forEach(function (t) {\n      v(e, t, n[t]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : j(Object(n)).forEach(function (t) {\n      Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t));\n    });\n  }\n\n  return e;\n}\n\nvar N = {\n  pinching: !1,\n  scale: 1,\n  translateX: 0,\n  translateY: 0\n},\n    L = function (i) {\n  var o,\n      c = i.imgProps,\n      s = c.style,\n      p = h(c, T),\n      m = i.isCurrentImage,\n      g = i.pagerHeight,\n      y = i.pagerIsDragging,\n      b = i.setDisableDrag,\n      w = i.singleClickToZoom,\n      O = n(!1),\n      x = l(O, 2),\n      C = x[0],\n      P = x[1],\n      E = r(null),\n      j = u(function () {\n    return I(I({}, N), {}, {\n      onChange: function (e, t) {\n        (e.value.scale < 1 || !e.value.pinching) && t.start(N), e.value.scale > 1 && D(E) && t.start(N);\n      },\n      onRest: function (e, t) {\n        1 === e.value.scale && (t.start(N), b(!1));\n      }\n    });\n  }),\n      L = l(j, 2),\n      R = L[0],\n      X = R.scale,\n      W = R.translateX,\n      Y = R.translateY,\n      H = L[1];\n  return t(function () {\n    m || 1 === X.get() || H.start(N);\n  }, [m, X, H]), d({\n    onDrag: function (e) {\n      var t = l(e.movement, 2),\n          n = t[0],\n          r = t[1],\n          i = e.pinching,\n          o = e.cancel,\n          a = e.first,\n          c = e.memo,\n          s = void 0 === c ? {\n        initialTranslateX: 0,\n        initialTranslateY: 0\n      } : c,\n          u = e.touches,\n          f = e.tap;\n      if (!(y || 1 === X.get() || f || (n && r && !C && P(!0), u > 1 || i || X.get() <= 1))) return X.get() > 1 && D(E) ? void o() : a ? {\n        initialTranslateX: W.get(),\n        initialTranslateY: Y.get()\n      } : (H.start({\n        translateX: s.initialTranslateX + n,\n        translateY: s.initialTranslateY + r\n      }), s);\n    },\n    onDragEnd: function (e) {\n      void 0 !== e.memo && setTimeout(function () {\n        return P(!1);\n      }, 100);\n    },\n    onPinch: function (e) {\n      var t = l(e.movement, 1)[0],\n          n = l(e.origin, 2),\n          r = n[0],\n          i = n[1],\n          o = e.event,\n          a = e.ctrlKey,\n          c = e.last,\n          s = e.cancel;\n      if (!y) if (b(!0), t && !C && P(!0), c) s();else {\n        var u = a ? 1e3 : 250,\n            f = X.get() + t / u,\n            p = f - X.get(),\n            m = [r, i];\n        \"clientX\" in o && \"clientY\" in o && a && (m = [o.clientX, o.clientY]);\n        var g = k({\n          currentTranslate: [W.get(), Y.get()],\n          imageRef: E,\n          pinchDelta: p,\n          scale: X.get(),\n          touchOrigin: m\n        }),\n            d = l(g, 2),\n            v = d[0],\n            h = d[1];\n        f < .5 ? H.start({\n          pinching: !0,\n          scale: .5\n        }) : f > 3 ? H.start({\n          pinching: !0,\n          scale: 3\n        }) : H.start({\n          pinching: !0,\n          scale: f,\n          translateX: v,\n          translateY: h\n        });\n      }\n    },\n    onPinchEnd: function () {\n      y || (X.get() > 1 ? b(!0) : H.start(N), setTimeout(function () {\n        return P(!1);\n      }, 100));\n    }\n  }, {\n    domTarget: E,\n    drag: {\n      filterTaps: !0\n    },\n    eventOptions: {\n      passive: !1\n    }\n  }), function (e) {\n    var n = e.ref,\n        r = e.latency,\n        i = void 0 === r ? 300 : r,\n        o = e.onSingleClick,\n        a = void 0 === o ? function () {\n      return null;\n    } : o,\n        l = e.onDoubleClick,\n        c = void 0 === l ? function () {\n      return null;\n    } : l;\n    t(function () {\n      var e,\n          t = n.current,\n          r = 0,\n          o = function (t) {\n        r += 1, e = setTimeout(function () {\n          1 === r ? a(t) : 2 === r && c(t), r = 0;\n        }, i);\n      };\n\n      return null == t || t.addEventListener(\"click\", o), function () {\n        null == t || t.removeEventListener(\"click\", o), e && clearTimeout(e);\n      };\n    });\n  }((v(o = {}, w ? \"onSingleClick\" : \"onDoubleClick\", function (e) {\n    if (y || C) e.stopPropagation();else if (1 === X.get()) {\n      var t = e.clientX,\n          n = e.clientY,\n          r = X.get() + 1,\n          i = r - X.get(),\n          o = k({\n        currentTranslate: [W.get(), Y.get()],\n        imageRef: E,\n        pinchDelta: i,\n        scale: X.get(),\n        touchOrigin: [t, n]\n      }),\n          a = l(o, 2),\n          c = a[0],\n          s = a[1];\n      b(!0), H.start({\n        pinching: !0,\n        scale: r,\n        translateX: c,\n        translateY: s\n      });\n    } else H.start(N);\n  }), v(o, \"latency\", w ? 0 : 200), v(o, \"ref\", E), o)), e.createElement(B, a({\n    className: \"lightbox-image\",\n    draggable: \"false\",\n    onClick: function (e) {\n      e.stopPropagation(), e.nativeEvent.stopImmediatePropagation();\n    },\n    onDragStart: function (e) {\n      e.preventDefault();\n    },\n    ref: E,\n    style: I(I({}, s), {}, {\n      maxHeight: g,\n      transform: f([X, W, Y], function (e, t, n) {\n        return \"translate(\".concat(t, \"px, \").concat(n, \"px) scale(\").concat(e, \")\");\n      })\n    }, m && {\n      willChange: \"transform\"\n    })\n  }, p));\n};\n\nL.displayName = \"Image\";\n\nvar R,\n    X,\n    W,\n    Y,\n    B = o(s.img)(E || (E = i([\"\\n    width: auto;\\n    max-width: 100%;\\n    user-select: none;\\n    touch-action: none;\\n    ::selection {\\n        background: none;\\n    }\\n\"]))),\n    H = function (i) {\n  var o = i.currentIndex,\n      s = i.images,\n      u = i.onClose,\n      f = i.onNext,\n      m = i.onPrev,\n      g = i.renderImageOverlay,\n      v = i.singleClickToZoom,\n      h = r(!0),\n      y = r(c(Array(s.length)).map(function () {\n    return e.createRef();\n  }) || []),\n      b = function () {\n    var e = n({\n      height: window.innerHeight,\n      width: window.innerWidth\n    }),\n        r = l(e, 2),\n        i = r[0],\n        o = r[1];\n    return t(function () {\n      var e = function () {\n        window.innerHeight === i.height && window.innerWidth === i.width || o({\n          height: window.innerHeight,\n          width: window.innerWidth\n        });\n      };\n\n      return window.addEventListener(\"resize\", e), window.addEventListener(\"orientationchange\", e), function () {\n        window.removeEventListener(\"resize\", e), window.addEventListener(\"orientationchange\", e);\n      };\n    }), i;\n  }(),\n      w = b.height,\n      O = b.width,\n      x = n(!1),\n      C = l(x, 2),\n      P = C[0],\n      E = C[1],\n      k = n(\"100%\"),\n      D = l(k, 2),\n      T = D[0],\n      j = D[1],\n      I = n(!1),\n      N = l(I, 2),\n      R = N[0],\n      X = N[1],\n      W = e.useCallback(function (e) {\n    var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],\n        n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,\n        r = (e - o) * O + (t ? n : 0);\n    return e < o - 1 || e > o + 1 ? {\n      display: \"none\",\n      x: r\n    } : {\n      display: \"flex\",\n      x: r\n    };\n  }, [o, O]),\n      Y = p(s.length, function (e) {\n    return W(e);\n  }),\n      B = l(Y, 2),\n      H = B[0],\n      A = B[1];\n\n  t(function () {\n    var e = null == y ? void 0 : y.current[o],\n        t = 0;\n    e && null != e && e.current && (t = e.current.clientHeight - 50), T !== t && j(t);\n  }, [o, T, w]), t(function () {\n    h.current ? h.current = !1 : A.start(function (e) {\n      return W(e);\n    });\n  }, [o, W, A]);\n  var S = d({\n    onDrag: function (e) {\n      var t = e.down,\n          n = l(e.movement, 1)[0],\n          r = l(e.direction, 1)[0],\n          i = e.velocity,\n          o = e.distance,\n          a = e.cancel,\n          c = e.active,\n          s = e.touches,\n          u = e.tap;\n\n      if (!P && 0 !== n && !u) {\n        R || X(!0);\n        var p = Math.abs(r) > .7;\n\n        if ((t && p && o > O / 3.5 || t && p && i > 2) && c) {\n          var g = r > 0 ? -1 : 1;\n          return a(), void (g > 0 ? f() : g < 0 && m());\n        }\n\n        s > 1 ? a() : A.start(function (e) {\n          return W(e, t, n);\n        });\n      }\n    },\n    onDragEnd: function () {\n      R && (A.start(function (e) {\n        return W(e);\n      }), setTimeout(function () {\n        return X(!1);\n      }, 100));\n    },\n    onWheel: function (e) {\n      var t = e.velocity,\n          n = l(e.direction, 2),\n          r = n[0],\n          i = n[1];\n\n      if (!e.ctrlKey && !P && 0 !== t && (R || X(!0), t > 1.1)) {\n        var o = r + i > 0 ? -1 : 1;\n        o > 0 ? f() : o < 0 && m();\n      }\n    },\n    onWheelEnd: function () {\n      A.start(function (e) {\n        return W(e);\n      }), setTimeout(function () {\n        return X(!1);\n      }, 100);\n    }\n  }, {\n    drag: {\n      filterTaps: !0\n    }\n  });\n  return e.createElement(e.Fragment, null, H.map(function (t, n) {\n    var r = t.display,\n        i = t.x;\n    return e.createElement(U, a({}, S(), {\n      className: \"lightbox-image-pager\",\n      key: n,\n      onClick: function () {\n        return Math.abs(i.get()) < 1 && !P && u();\n      },\n      ref: y.current[n],\n      role: \"presentation\",\n      style: {\n        display: r,\n        transform: i.to(function (e) {\n          return \"translateX(\".concat(e, \"px)\");\n        })\n      }\n    }), e.createElement(z, null, e.createElement(Z, null, e.createElement(F, {\n      onClick: function (e) {\n        e.stopPropagation(), e.nativeEvent.stopImmediatePropagation();\n      }\n    }, e.createElement(L, {\n      imgProps: s[n],\n      isCurrentImage: n === o,\n      pagerHeight: T,\n      pagerIsDragging: R,\n      setDisableDrag: E,\n      singleClickToZoom: v\n    }), g()))));\n  }));\n};\n\nH.displayName = \"ImagePager\";\n\nvar A,\n    S,\n    Z = o.div(R || (R = i([\"\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n\"]))),\n    z = o.div(X || (X = i([\"\\n    width: 100%;\\n    display: flex;\\n    justify-content: center;\\n\"]))),\n    U = o(s.div)(W || (W = i([\"\\n    position: absolute;\\n    top: 0px;\\n    left: 0px;\\n    right: 0px;\\n    bottom: 0px;\\n    height: 100%;\\n    width: 100%;\\n    will-change: transform;\\n    touch-action: none;\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: center;\\n    align-items: center;\\n\"]))),\n    F = o.div(Y || (Y = i([\"\\n    position: relative;\\n    touch-action: none;\\n    user-select: none;\\n\"]))),\n    M = function (t) {\n  var n = t.currentIndex,\n      r = t.images,\n      i = t.onClose,\n      o = t.onNext,\n      a = t.onPrev,\n      l = t.renderImageOverlay,\n      c = t.renderNextButton,\n      s = t.renderPrevButton,\n      u = t.singleClickToZoom,\n      f = n > 0,\n      p = n + 1 < r.length;\n  return e.createElement(K, {\n    className: \"lightbox-image-stage\",\n    \"data-testid\": \"lightbox-image-stage\"\n  }, s({\n    canPrev: f\n  }), e.createElement(H, {\n    currentIndex: n,\n    images: r,\n    onClose: i,\n    onNext: o,\n    onPrev: a,\n    renderImageOverlay: l,\n    singleClickToZoom: u\n  }), c({\n    canNext: p\n  }));\n},\n    K = o.div(A || (A = i([\"\\n    flex-grow: 1;\\n    position: relative;\\n    height: 100%;\\n    width: 100%;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n\"])));\n\nfunction q(e, t) {\n  var n = Object.keys(e);\n\n  if (Object.getOwnPropertySymbols) {\n    var r = Object.getOwnPropertySymbols(e);\n    t && (r = r.filter(function (t) {\n      return Object.getOwnPropertyDescriptor(e, t).enumerable;\n    })), n.push.apply(n, r);\n  }\n\n  return n;\n}\n\nfunction G(e) {\n  for (var t = 1; t < arguments.length; t++) {\n    var n = null != arguments[t] ? arguments[t] : {};\n    t % 2 ? q(Object(n), !0).forEach(function (t) {\n      v(e, t, n[t]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : q(Object(n)).forEach(function (t) {\n      Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t));\n    });\n  }\n\n  return e;\n}\n\nvar J = function (t) {\n  var n = t.children,\n      r = t.className,\n      i = t.isOpen,\n      o = t.pageTransitionConfig,\n      a = t.style,\n      l = {\n    config: G(G({}, m.default), {}, {\n      friction: 32,\n      mass: 1,\n      tension: 320\n    }),\n    enter: {\n      opacity: 1,\n      transform: \"scale(1)\"\n    },\n    from: {\n      opacity: 0,\n      transform: \"scale(0.75)\"\n    },\n    leave: {\n      opacity: 0,\n      transform: \"scale(0.75)\"\n    }\n  },\n      c = g(i, G(G({}, l), o));\n  return e.createElement(e.Fragment, null, c(function (t, i) {\n    return i && e.createElement(Q, {\n      className: \"lightbox-container\".concat(r ? \" \".concat(r) : \"\"),\n      \"data-testid\": \"lightbox-container\",\n      style: G(G({}, t), a)\n    }, n);\n  }));\n},\n    Q = o(s.div)(S || (S = i([\"\\n    display: flex;\\n    flex-direction: column;\\n    position: fixed;\\n    z-index: 400;\\n    top: 0;\\n    bottom: 0;\\n    left: 0;\\n    right: 0;\\n\"])));\n\nfunction V(e) {\n  var t = function () {\n    if (\"undefined\" == typeof Reflect || !Reflect.construct) return !1;\n    if (Reflect.construct.sham) return !1;\n    if (\"function\" == typeof Proxy) return !0;\n\n    try {\n      return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})), !0;\n    } catch (e) {\n      return !1;\n    }\n  }();\n\n  return function () {\n    var n,\n        r = C(e);\n\n    if (t) {\n      var i = C(this).constructor;\n      n = Reflect.construct(r, arguments, i);\n    } else n = r.apply(this, arguments);\n\n    return x(this, n);\n  };\n}\n\nvar $ = function (e) {\n  O(n, e);\n  var t = V(n);\n\n  function n() {\n    var e;\n    y(this, n);\n\n    for (var r = arguments.length, i = new Array(r), o = 0; o < r; o++) i[o] = arguments[o];\n\n    return e = t.call.apply(t, [this].concat(i)), v(w(e), \"portalContainer\", void 0), v(w(e), \"body\", void 0), v(w(e), \"preventWheel\", function (e) {\n      return e.preventDefault();\n    }), e;\n  }\n\n  return b(n, [{\n    key: \"componentDidMount\",\n    value: function () {\n      this.body = document.body, this.portalContainer = document.createElement(\"div\"), this.portalContainer.setAttribute(\"class\", \"lightbox-portal\"), this.body.appendChild(this.portalContainer), this.forceUpdate(), this.portalContainer.addEventListener(\"wheel\", this.preventWheel);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function () {\n      this.portalContainer.removeEventListener(\"wheel\", this.preventWheel), this.body.removeChild(this.portalContainer);\n    }\n  }, {\n    key: \"render\",\n    value: function () {\n      if (void 0 === this.portalContainer) return null;\n      var e = this.props.children;\n      return P.createPortal(e, this.portalContainer);\n    }\n  }]), n;\n}(e.Component);\n\nexport default function (n) {\n  var r = n.isOpen,\n      i = n.onClose,\n      o = n.images,\n      a = void 0 === o ? [] : o,\n      l = n.currentIndex,\n      c = n.onPrev,\n      s = n.onNext,\n      u = n.renderHeader,\n      f = void 0 === u ? function () {\n    return null;\n  } : u,\n      p = n.renderFooter,\n      m = void 0 === p ? function () {\n    return null;\n  } : p,\n      g = n.renderPrevButton,\n      d = void 0 === g ? function () {\n    return null;\n  } : g,\n      v = n.renderNextButton,\n      h = void 0 === v ? function () {\n    return null;\n  } : v,\n      y = n.renderImageOverlay,\n      b = void 0 === y ? function () {\n    return null;\n  } : y,\n      w = n.className,\n      O = void 0 === w ? \"\" : w,\n      x = n.singleClickToZoom,\n      C = void 0 !== x && x,\n      P = n.style,\n      E = void 0 === P ? {} : P,\n      k = n.pageTransitionConfig,\n      D = void 0 === k ? null : k;\n  return t(function () {\n    var e = function (e) {\n      r && [\"ArrowUp\", \"ArrowDown\", \"End\", \"Home\", \"PageUp\", \"PageDown\"].includes(e.key) && e.preventDefault();\n    },\n        t = function (e) {\n      if (r) switch (e.key) {\n        case \"ArrowLeft\":\n          c();\n          break;\n\n        case \"ArrowRight\":\n          s();\n          break;\n\n        case \"Escape\":\n          i();\n          break;\n\n        default:\n          e.preventDefault();\n      }\n    };\n\n    return document.addEventListener(\"keyup\", t), document.addEventListener(\"keydown\", e), function () {\n      document.removeEventListener(\"keyup\", t), document.removeEventListener(\"keydown\", e);\n    };\n  }), e.createElement($, null, e.createElement(J, {\n    className: O,\n    isOpen: r,\n    pageTransitionConfig: D,\n    style: E\n  }, f(), e.createElement(M, {\n    currentIndex: l,\n    images: a,\n    onClose: i,\n    onNext: s,\n    onPrev: c,\n    renderImageOverlay: b,\n    renderNextButton: h,\n    renderPrevButton: d,\n    singleClickToZoom: C\n  }), m()));\n}","map":{"version":3,"sources":["../src/components/ImageStage/utils/getTranslateOffsetsFromScale.ts","../src/components/ImageStage/utils/imageIsOutOfBounds.ts","../src/components/ImageStage/components/Image/index.tsx","../src/components/ImageStage/utils/useDoubleClick.tsx","../src/components/ImageStage/components/ImagePager/index.tsx","../src/components/ImageStage/utils/useWindowSize.tsx","../src/components/ImageStage/index.tsx","../src/components/PageContainer/index.tsx","../src/components/CreatePortal/index.tsx","../src/index.tsx"],"names":["getTranslateOffsetsFromScale","imageRef","scale","pinchDelta","touchOrigin","touchOriginX","touchOriginY","currentTranslate","translateX","translateY","current","height","imageHeight","left","imageTopLeftX","top","imageTopLeftY","width","getBoundingClientRect","imageIsOutOfBounds","bottom","bottomRightY","topLeftX","right","bottomRightX","topLeftY","innerHeight","windowHeight","innerWidth","windowWidth","window","defaultImageTransform","pinching","Image","imgProps","style","imgStyleProp","restImgProps","isCurrentImage","pagerHeight","pagerIsDragging","setDisableDrag","singleClickToZoom","isPanningImage","setIsPanningImage","useState","useRef","springApi","useSpring","onChange","result","instance","value","start","onRest","useEffect","get","useGesture","onDrag","movement","xMovement","yMovement","cancel","first","memo","initialTranslateX","initialTranslateY","touches","tap","onDragEnd","undefined","setTimeout","onPinch","origin","event","ctrlKey","last","SCALE_FACTOR","pinchScale","clientX","clientY","newTranslateX","newTranslateY","onPinchEnd","domTarget","drag","filterTaps","eventOptions","passive","useDoubleClick","e","stopPropagation","React","AnimatedImage","className","draggable","onClick","nativeEvent","stopImmediatePropagation","onDragStart","preventDefault","ref","maxHeight","transform","to","s","x","y","willChange","displayName","styled","animated","latency","onSingleClick","onDoubleClick","clickRef","clickCount","timer","handleClick","addEventListener","removeEventListener","clearTimeout","ImagePager","currentIndex","images","onClose","onNext","onPrev","renderImageOverlay","firstRender","imageStageRef","_toConsumableArray","Array","length","map","createRef","pageWidth","useWindowSize","disableDrag","setPagerHeight","isDragging","setIsDragging","getPagePositions","useCallback","i","down","xDelta","display","pagerSprings","springsApi","useSprings","currImageRef","currPagerHeight","clientHeight","bind","direction","xDir","velocity","distance","active","isHorizontalDrag","Math","abs","goToIndex","onWheel","yDir","onWheelEnd","AnimatedImagePager","key","role","xInterp","PagerContentWrapper","PagerInnerContentWrapper","ImageContainer","div","windowSize","setWindowSize","handleResize","ImageStage","renderNextButton","renderPrevButton","canPrev","canNext","ImageStageContainer","PageContainer","children","isOpen","pageTransitionConfig","defaultTransition","config","default","friction","mass","tension","enter","opacity","from","leave","transitions","useTransition","animatedStyles","item","AnimatedPageContainer","CreatePortal","Component","body","document","portalContainer","createElement","setAttribute","appendChild","this","forceUpdate","preventWheel","removeChild","props","ReactDOM","createPortal","renderHeader","renderFooter","preventBackgroundScroll","includes","handleKeyboardInput"],"mappings":"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","sourcesContent":["type IGetTranslateOffsetsFromScale = {\n    /** The current [x,y] translate values of image */\n    currentTranslate: [translateX: number, translateY: number];\n    /** The image dom node used as a reference to calculate translate offsets */\n    imageRef: React.RefObject<HTMLImageElement>;\n    /** The amount of change in the new transform scale */\n    pinchDelta: number;\n    /** The current transform scale of image */\n    scale: number;\n    /** The [x,y] coordinates of the zoom origin */\n    touchOrigin: [touchOriginX: number, touchOriginY: number];\n};\n\ntype ITranslateOffsetsReturnType = [translateX: number, translateY: number];\n\n/**\n * Calculates the the translate(x,y) coordinates needed to zoom-in\n * to a point in an image.\n *\n * @returns {array} The next [x,y] translate values to apply to image\n */\nconst getTranslateOffsetsFromScale = ({\n    imageRef,\n    scale,\n    pinchDelta,\n    touchOrigin: [touchOriginX, touchOriginY],\n    currentTranslate: [translateX, translateY],\n}: IGetTranslateOffsetsFromScale): ITranslateOffsetsReturnType => {\n    if (!imageRef?.current) {\n        return [0, 0];\n    }\n\n    const {\n        height: imageHeight,\n        left: imageTopLeftX,\n        top: imageTopLeftY,\n        width: imageWidth,\n    } = imageRef.current?.getBoundingClientRect();\n\n    // Get the (x,y) touch position relative to image origin at the current scale\n    const imageCoordX = (touchOriginX - imageTopLeftX - imageWidth / 2) / scale;\n    const imageCoordY =\n        (touchOriginY - imageTopLeftY - imageHeight / 2) / scale;\n\n    // Calculate translateX/Y offset at the next scale to zoom to touch position\n    const newTranslateX = -imageCoordX * pinchDelta + translateX;\n    const newTranslateY = -imageCoordY * pinchDelta + translateY;\n\n    return [newTranslateX, newTranslateY];\n};\n\nexport default getTranslateOffsetsFromScale;\n","/**\n * Determines if the provided image is within the viewport\n *\n * @returns True if image needs to be resized to fit viewport, otherwise false\n */\nconst imageIsOutOfBounds = (\n    imageRef: React.RefObject<HTMLImageElement>\n): boolean => {\n    // If no ref is provided, return false\n    if (!imageRef.current) {\n        return false;\n    }\n\n    const {\n        bottom: bottomRightY,\n        left: topLeftX,\n        right: bottomRightX,\n        top: topLeftY,\n    } = imageRef.current?.getBoundingClientRect();\n    const { innerHeight: windowHeight, innerWidth: windowWidth } = window;\n\n    if (\n        topLeftX > windowWidth * (1 / 2) ||\n        topLeftY > windowHeight * (1 / 2) ||\n        bottomRightX < windowWidth * (1 / 2) ||\n        bottomRightY < windowHeight * (1 / 2)\n    )\n        return true;\n\n    return false;\n};\n\nexport default imageIsOutOfBounds;\n","import React, { useEffect, useState, useRef } from 'react';\nimport { useSpring, animated, to } from '@react-spring/web';\nimport { useGesture } from 'react-use-gesture';\nimport styled from 'styled-components';\nimport {\n    useDoubleClick,\n    imageIsOutOfBounds,\n    getTranslateOffsetsFromScale,\n} from '../../utils';\nimport type { ImagesListItem } from '../../../../types/ImagesList';\n\nconst defaultImageTransform = {\n    pinching: false,\n    scale: 1,\n    translateX: 0,\n    translateY: 0,\n};\n\ntype IImageProps = {\n    /** Any valid <img /> props to pass to the lightbox img element ie src, alt, caption etc*/\n    imgProps: ImagesListItem;\n    /** True if this image is currently shown in pager, otherwise false */\n    isCurrentImage: boolean;\n    /** Fixed height of the image stage, used to restrict maximum height of images */\n    pagerHeight: '100%' | number;\n    /** Indicates parent ImagePager is in a state of dragging, if true click to zoom is disabled */\n    pagerIsDragging: boolean;\n    /** Function that can be called to disable dragging in the pager */\n    setDisableDrag: (disable: boolean) => void;\n    /** Overrides the default behavior of double clicking causing an image zoom to a single click */\n    singleClickToZoom: boolean;\n};\n\n/**\n * Animates pinch-zoom + panning on image using spring physics\n */\nconst Image = ({\n    imgProps: { style: imgStyleProp, ...restImgProps },\n    isCurrentImage,\n    pagerHeight,\n    pagerIsDragging,\n    setDisableDrag,\n    singleClickToZoom,\n}: IImageProps) => {\n    const [isPanningImage, setIsPanningImage] = useState<boolean>(false);\n    const imageRef = useRef<HTMLImageElement>(null);\n\n    /**\n     * Animates scale and translate offsets of Image as they change in gestures\n     *\n     * @see https://www.react-spring.io/docs/hooks/use-spring\n     */\n    const [{ scale, translateX, translateY }, springApi] = useSpring(() => ({\n        ...defaultImageTransform,\n        onChange: (result, instance) => {\n            if (result.value.scale < 1 || !result.value.pinching) {\n                instance.start(defaultImageTransform);\n            }\n\n            if (result.value.scale > 1 && imageIsOutOfBounds(imageRef)) {\n                instance.start(defaultImageTransform);\n            }\n        },\n        // Enable dragging in ImagePager if image is at the default size\n        onRest: (result, instance) => {\n            if (result.value.scale === 1) {\n                instance.start(defaultImageTransform);\n                setDisableDrag(false);\n            }\n        },\n    }));\n\n    // Reset scale of this image when dragging to new image in ImagePager\n    useEffect(() => {\n        if (!isCurrentImage && scale.get() !== 1) {\n            springApi.start(defaultImageTransform);\n        }\n    }, [isCurrentImage, scale, springApi]);\n\n    /**\n     * Update Image scale and translate offsets during pinch/pan gestures\n     *\n     * @see https://github.com/react-spring/react-use-gesture#usegesture-hook-supporting-multiple-gestures-at-once\n     */\n    useGesture(\n        {\n            onDrag: ({\n                movement: [xMovement, yMovement],\n                pinching,\n                cancel,\n                first,\n                memo = { initialTranslateX: 0, initialTranslateY: 0 },\n                touches,\n                tap,\n            }) => {\n                if (pagerIsDragging || scale.get() === 1 || tap) {\n                    return;\n                }\n\n                // Disable click to zoom during drag\n                if (xMovement && yMovement && !isPanningImage) {\n                    setIsPanningImage(true);\n                }\n\n                if (touches > 1) return;\n                if (pinching || scale.get() <= 1) return;\n\n                // Prevent dragging image out of viewport\n                if (scale.get() > 1 && imageIsOutOfBounds(imageRef)) {\n                    cancel();\n                    return;\n                } else {\n                    if (first) {\n                        return {\n                            initialTranslateX: translateX.get(),\n                            initialTranslateY: translateY.get(),\n                        };\n                    }\n\n                    // Translate image from dragging\n                    springApi.start({\n                        translateX: memo.initialTranslateX + xMovement,\n                        translateY: memo.initialTranslateY + yMovement,\n                    });\n\n                    return memo;\n                }\n            },\n            onDragEnd: ({ memo }) => {\n                if (memo !== undefined) {\n                    // Add small timeout to prevent onClick handler from firing after drag\n                    setTimeout(() => setIsPanningImage(false), 100);\n                }\n            },\n            onPinch: ({\n                movement: [xMovement],\n                origin: [touchOriginX, touchOriginY],\n                event,\n                ctrlKey,\n                last,\n                cancel,\n            }) => {\n                if (pagerIsDragging) {\n                    return;\n                }\n\n                // Prevent ImagePager from registering isDragging\n                setDisableDrag(true);\n\n                // Disable click to zoom during pinch\n                if (xMovement && !isPanningImage) setIsPanningImage(true);\n\n                // Don't calculate new translate offsets on final frame\n                if (last) {\n                    cancel();\n                    return;\n                }\n\n                // Speed up pinch zoom when using mouse versus touch\n                const SCALE_FACTOR = ctrlKey ? 1000 : 250;\n                const pinchScale = scale.get() + xMovement / SCALE_FACTOR;\n                const pinchDelta = pinchScale - scale.get();\n\n                /**\n                 * Calculate touch origin for pinch/zoom\n                 *\n                 * if event is a touch event (React.TouchEvent<Element>, TouchEvent or WebKitGestureEvent) use touchOriginX/Y\n                 * if event is a wheel event (React.WheelEvent<Element> or WheelEvent) use the mouse cursor's clientX/Y\n                 */\n                let touchOrigin: [touchOriginX: number, touchOriginY: number] =\n                    [touchOriginX, touchOriginY];\n                if ('clientX' in event && 'clientY' in event && ctrlKey) {\n                    touchOrigin = [event.clientX, event.clientY];\n                }\n\n                // Calculate the amount of x, y translate offset needed to\n                // zoom-in to point as image scale grows\n                const [newTranslateX, newTranslateY] =\n                    getTranslateOffsetsFromScale({\n                        currentTranslate: [translateX.get(), translateY.get()],\n                        imageRef,\n                        pinchDelta,\n                        scale: scale.get(),\n                        // Use the [x, y] coords of mouse if a trackpad or ctrl + wheel event\n                        // Otherwise use touch origin\n                        touchOrigin,\n                    });\n\n                // Restrict the amount of zoom between half and 3x image size\n                if (pinchScale < 0.5)\n                    springApi.start({ pinching: true, scale: 0.5 });\n                else if (pinchScale > 3.0)\n                    springApi.start({ pinching: true, scale: 3.0 });\n                else\n                    springApi.start({\n                        pinching: true,\n                        scale: pinchScale,\n                        translateX: newTranslateX,\n                        translateY: newTranslateY,\n                    });\n            },\n            onPinchEnd: () => {\n                if (!pagerIsDragging) {\n                    if (scale.get() > 1) setDisableDrag(true);\n                    else springApi.start(defaultImageTransform);\n                    // Add small timeout to prevent onClick handler from firing after panning\n                    setTimeout(() => setIsPanningImage(false), 100);\n                }\n            },\n        },\n        /**\n         * useGesture config\n         * @see https://github.com/react-spring/react-use-gesture#usegesture-config\n         */\n        {\n            domTarget: imageRef as React.RefObject<EventTarget>,\n            drag: {\n                filterTaps: true,\n            },\n            eventOptions: {\n                passive: false,\n            },\n        }\n    );\n\n    // Handle click/tap on image\n    useDoubleClick({\n        [singleClickToZoom ? 'onSingleClick' : 'onDoubleClick']: (\n            e: MouseEvent\n        ) => {\n            if (pagerIsDragging || isPanningImage) {\n                e.stopPropagation();\n                return;\n            }\n\n            // If tapped while already zoomed-in, zoom out to default scale\n            if (scale.get() !== 1) {\n                springApi.start(defaultImageTransform);\n                return;\n            }\n\n            // Zoom-in to origin of click on image\n            const { clientX: touchOriginX, clientY: touchOriginY } = e;\n            const pinchScale = scale.get() + 1;\n            const pinchDelta = pinchScale - scale.get();\n\n            // Calculate the amount of x, y translate offset needed to\n            // zoom-in to point as image scale grows\n            const [newTranslateX, newTranslateY] = getTranslateOffsetsFromScale(\n                {\n                    currentTranslate: [translateX.get(), translateY.get()],\n                    imageRef,\n                    pinchDelta,\n                    scale: scale.get(),\n                    touchOrigin: [touchOriginX, touchOriginY],\n                }\n            );\n\n            // Disable dragging in pager\n            setDisableDrag(true);\n            springApi.start({\n                pinching: true,\n                scale: pinchScale,\n                translateX: newTranslateX,\n                translateY: newTranslateY,\n            });\n        },\n        latency: singleClickToZoom ? 0 : 200,\n        ref: imageRef,\n    });\n\n    return (\n        <AnimatedImage\n            className=\"lightbox-image\"\n            draggable=\"false\"\n            onClick={(e: React.MouseEvent<HTMLImageElement>) => {\n                // Don't close lighbox when clicking image\n                e.stopPropagation();\n                e.nativeEvent.stopImmediatePropagation();\n            }}\n            onDragStart={(e: React.DragEvent<HTMLImageElement>) => {\n                // Disable image ghost dragging in firefox\n                e.preventDefault();\n            }}\n            ref={imageRef}\n            style={{\n                ...imgStyleProp,\n                maxHeight: pagerHeight,\n                transform: to(\n                    [scale, translateX, translateY],\n                    (s, x, y) => `translate(${x}px, ${y}px) scale(${s})`\n                ),\n                ...(isCurrentImage && { willChange: 'transform' }),\n            }}\n            // Include any valid img html attributes provided in the <Lightbox /> images prop\n            {...(restImgProps as React.ComponentProps<typeof animated.img>)}\n        />\n    );\n};\n\nImage.displayName = 'Image';\n\nexport default Image;\n\nconst AnimatedImage = styled(animated.img)`\n    width: auto;\n    max-width: 100%;\n    user-select: none;\n    touch-action: none;\n    ::selection {\n        background: none;\n    }\n`;\n","import React, { useEffect } from 'react';\n\ntype IUseDoubleClickProps = {\n    /** The amount of time (in milliseconds) to wait before differentiating a single from a double click */\n    latency?: number;\n    /** A callback function for double click events */\n    onDoubleClick?: (event: MouseEvent) => void;\n    /** A callback function for single click events */\n    onSingleClick?: (event: MouseEvent) => void;\n    /** Dom node to watch for double clicks */\n    ref: React.RefObject<HTMLElement>;\n};\n\n/**\n * React Hook that returns the current window size\n * and report updates from the 'resize' window event\n */\nconst useDoubleClick = ({\n    ref,\n    latency = 300,\n    onSingleClick = () => null,\n    onDoubleClick = () => null,\n}: IUseDoubleClickProps) => {\n    useEffect(() => {\n        const clickRef = ref.current;\n        let clickCount = 0;\n        let timer: ReturnType<typeof setTimeout>;\n\n        const handleClick = (e: MouseEvent) => {\n            clickCount += 1;\n\n            timer = setTimeout(() => {\n                if (clickCount === 1) onSingleClick(e);\n                else if (clickCount === 2) onDoubleClick(e);\n\n                clickCount = 0;\n            }, latency);\n        };\n\n        // Add event listener for click events\n        clickRef?.addEventListener('click', handleClick);\n\n        // Remove event listener\n        return () => {\n            clickRef?.removeEventListener('click', handleClick);\n\n            if (timer) {\n                clearTimeout(timer);\n            }\n        };\n    });\n};\n\nexport default useDoubleClick;\n","import React, { useRef, useEffect, useState } from 'react';\nimport { useSprings, animated } from '@react-spring/web';\nimport { useGesture } from 'react-use-gesture';\nimport styled from 'styled-components';\nimport { useWindowSize } from '../../utils';\nimport Image from '../Image';\nimport type { ImagesList } from '../../../../types/ImagesList';\n\ntype IImagePager = {\n    /** Index of image in images array that is currently shown */\n    currentIndex: number;\n    /** Array of image objects to be shown in Lightbox */\n    images: ImagesList;\n    /** Function that closes the Lightbox */\n    onClose: () => void;\n    /** Function that can be called to disable dragging in the pager */\n    onNext: () => void;\n    /** True if this image is currently shown in pager, otherwise false */\n    onPrev: () => void;\n    /** A React component that renders inside the image stage, useful for making overlays over the image */\n    renderImageOverlay: () => React.ReactNode;\n    /** Overrides the default behavior of double clicking causing an image zoom to a single click */\n    singleClickToZoom: boolean;\n};\n\n/**\n * Gesture controlled surface that animates prev/next page changes via spring physics.\n */\nconst ImagePager = ({\n    currentIndex,\n    images,\n    onClose,\n    onNext,\n    onPrev,\n    renderImageOverlay,\n    singleClickToZoom,\n}: IImagePager) => {\n    const firstRender = useRef(true);\n    const imageStageRef = useRef(\n        [...Array(images.length)].map(() =>\n            React.createRef<HTMLDivElement>()\n        ) || []\n    );\n    const { height: windowHeight, width: pageWidth } = useWindowSize();\n    const [disableDrag, setDisableDrag] = useState<boolean>(false);\n    const [pagerHeight, setPagerHeight] = useState<'100%' | number>('100%');\n    const [isDragging, setIsDragging] = useState<boolean>(false);\n\n    // Generate page positions based on current index\n    const getPagePositions = React.useCallback(\n        (i: number, down = false, xDelta = 0) => {\n            const x = (i - currentIndex) * pageWidth + (down ? xDelta : 0);\n            if (i < currentIndex - 1 || i > currentIndex + 1)\n                return { display: 'none', x };\n            return { display: 'flex', x };\n        },\n        [currentIndex, pageWidth]\n    );\n\n    /**\n     * Animates translateX of all images at the same time\n     *\n     * @see https://www.react-spring.io/docs/hooks/use-springs\n     */\n    const [pagerSprings, springsApi] = useSprings(images.length, (i) =>\n        getPagePositions(i)\n    );\n\n    // Determine the absolute height of the image pager\n    useEffect(() => {\n        const currImageRef = imageStageRef?.current[currentIndex];\n        let currPagerHeight = 0;\n\n        if (currImageRef && currImageRef?.current) {\n            currPagerHeight = currImageRef.current.clientHeight - 50;\n        }\n\n        if (pagerHeight !== currPagerHeight) {\n            setPagerHeight(currPagerHeight);\n        }\n    }, [currentIndex, pagerHeight, windowHeight]);\n\n    // Animate page change if currentIndex changes\n    useEffect(() => {\n        // No need to set page position for initial render\n        if (firstRender.current) {\n            firstRender.current = false;\n            return;\n        }\n\n        // Update page positions after prev/next page state change\n        springsApi.start((i) => getPagePositions(i));\n    }, [currentIndex, getPagePositions, springsApi]);\n\n    /**\n     * Update each Image's visibility and translateX offset during dragging\n     *\n     * @see https://github.com/react-spring/react-use-gesture\n     */\n    const bind = useGesture(\n        {\n            onDrag: ({\n                down,\n                movement: [xMovement],\n                direction: [xDir],\n                velocity,\n                distance,\n                cancel,\n                active,\n                touches,\n                tap,\n            }) => {\n                // Disable drag if Image has been zoomed in to allow for panning\n                if (disableDrag || xMovement === 0 || tap) return;\n                if (!isDragging) setIsDragging(true);\n\n                const isHorizontalDrag = Math.abs(xDir) > 0.7;\n                const draggedFarEnough =\n                    down && isHorizontalDrag && distance > pageWidth / 3.5;\n                const draggedFastEnough =\n                    down && isHorizontalDrag && velocity > 2;\n\n                // Handle next/prev image from valid drag\n                if ((draggedFarEnough || draggedFastEnough) && active) {\n                    const goToIndex = xDir > 0 ? -1 : 1;\n\n                    // Cancel gesture event\n                    cancel();\n\n                    if (goToIndex > 0) onNext();\n                    else if (goToIndex < 0) onPrev();\n\n                    return;\n                }\n\n                // Don't move pager during two+ finger touch events, i.e. pinch-zoom\n                if (touches > 1) {\n                    cancel();\n                    return;\n                }\n\n                // Update page x-coordinates for single finger/mouse gestures\n                springsApi.start((i) => getPagePositions(i, down, xMovement));\n                return;\n            },\n            onDragEnd: () => {\n                if (isDragging) {\n                    springsApi.start((i) => getPagePositions(i));\n                    // Add small timeout buffer to prevent event handlers from firing in child Images\n                    setTimeout(() => setIsDragging(false), 100);\n                }\n            },\n            onWheel: ({ velocity, direction: [xDir, yDir], ctrlKey }) => {\n                // Disable drag if Image has been zoomed in to allow for panning\n                if (ctrlKey || disableDrag || velocity === 0) return;\n\n                if (!isDragging) {\n                    setIsDragging(true);\n                }\n\n                const draggedFastEnough = velocity > 1.1;\n\n                // Handle next/prev image from valid drag\n                if (draggedFastEnough) {\n                    const goToIndex = xDir + yDir > 0 ? -1 : 1;\n\n                    if (goToIndex > 0) onNext();\n                    else if (goToIndex < 0) onPrev();\n                }\n            },\n            onWheelEnd: () => {\n                springsApi.start((i) => getPagePositions(i));\n                // Add small timeout buffer to prevent event handlers from firing in child Images\n                setTimeout(() => setIsDragging(false), 100);\n            },\n        },\n        {\n            drag: {\n                filterTaps: true,\n            },\n        }\n    );\n\n    return (\n        <>\n            {pagerSprings.map(({ display, x }, i) => (\n                <AnimatedImagePager\n                    {...bind()}\n                    className=\"lightbox-image-pager\"\n                    key={i}\n                    onClick={() =>\n                        Math.abs(x.get()) < 1 && !disableDrag && onClose()\n                    }\n                    ref={imageStageRef.current[i]}\n                    role=\"presentation\"\n                    style={{\n                        display,\n                        transform: x.to(\n                            (xInterp: number) => `translateX(${xInterp}px)`\n                        ),\n                    }}\n                >\n                    <PagerContentWrapper>\n                        <PagerInnerContentWrapper>\n                            <ImageContainer\n                                onClick={(e) => {\n                                    e.stopPropagation();\n                                    e.nativeEvent.stopImmediatePropagation();\n                                }}\n                            >\n                                <Image\n                                    imgProps={images[i]}\n                                    isCurrentImage={i === currentIndex}\n                                    pagerHeight={pagerHeight}\n                                    pagerIsDragging={isDragging}\n                                    setDisableDrag={setDisableDrag}\n                                    singleClickToZoom={singleClickToZoom}\n                                />\n                                {renderImageOverlay()}\n                            </ImageContainer>\n                        </PagerInnerContentWrapper>\n                    </PagerContentWrapper>\n                </AnimatedImagePager>\n            ))}\n        </>\n    );\n};\n\nImagePager.displayName = 'ImagePager';\n\nexport default ImagePager;\n\nconst PagerInnerContentWrapper = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst PagerContentWrapper = styled.div`\n    width: 100%;\n    display: flex;\n    justify-content: center;\n`;\n\nconst AnimatedImagePager = styled(animated.div)`\n    position: absolute;\n    top: 0px;\n    left: 0px;\n    right: 0px;\n    bottom: 0px;\n    height: 100%;\n    width: 100%;\n    will-change: transform;\n    touch-action: none;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst ImageContainer = styled.div`\n    position: relative;\n    touch-action: none;\n    user-select: none;\n`;\n","import { useState, useEffect } from 'react';\n\ntype IUseWindowSize = {\n    /** window height */\n    height: number;\n    /** window width */\n    width: number;\n};\n\n/**\n * React Hook that returns the current window size\n * and report updates from the 'resize' window event\n *\n * @returns {WindowSize} An object container the window width and height\n */\nconst useWindowSize = (): IUseWindowSize => {\n    const [windowSize, setWindowSize] = useState<IUseWindowSize>({\n        height: window.innerHeight,\n        width: window.innerWidth,\n    });\n\n    useEffect(() => {\n        const handleResize = () => {\n            if (\n                window.innerHeight !== windowSize.height ||\n                window.innerWidth !== windowSize.width\n            ) {\n                setWindowSize({\n                    height: window.innerHeight,\n                    width: window.innerWidth,\n                });\n            }\n        };\n\n        // Add event listener for window resize events\n        window.addEventListener('resize', handleResize);\n        window.addEventListener('orientationchange', handleResize);\n\n        // Remove event listener\n        return () => {\n            window.removeEventListener('resize', handleResize);\n            window.addEventListener('orientationchange', handleResize);\n        };\n    });\n\n    return windowSize;\n};\n\nexport default useWindowSize;\n","import React from 'react';\nimport styled from 'styled-components';\nimport ImagePager from './components/ImagePager';\nimport type { ImagesList } from '../../types/ImagesList';\n\ntype IImageStageProps = {\n    /** Index of image in images array that is currently shown */\n    currentIndex: number;\n    /** Array of image objects to be shown in Lightbox */\n    images: ImagesList;\n    /** Function that closes the Lightbox */\n    onClose: () => void;\n    /** Function that can be called to disable dragging in the pager */\n    onNext: () => void;\n    /** True if this image is currently shown in pager, otherwise false */\n    onPrev: () => void;\n    /** A React component that renders inside the image stage, useful for making overlays over the image */\n    renderImageOverlay: () => React.ReactNode;\n    /** A React component that is used for next button in image pager */\n    renderNextButton: ({ canNext }: { canNext: boolean }) => React.ReactNode;\n    /** A React component that is used for previous button in image pager */\n    renderPrevButton: ({ canPrev }: { canPrev: boolean }) => React.ReactNode;\n    /** Overrides the default behavior of double clicking causing an image zoom to a single click */\n    singleClickToZoom: boolean;\n};\n\n/**\n * Containing element for ImagePager and prev/next button controls\n */\nconst ImageStage = ({\n    currentIndex,\n    images,\n    onClose,\n    onNext,\n    onPrev,\n    renderImageOverlay,\n    renderNextButton,\n    renderPrevButton,\n    singleClickToZoom,\n}: IImageStageProps) => {\n    // Extra sanity check that the next/prev image exists before moving to it\n    const canPrev = currentIndex > 0;\n    const canNext = currentIndex + 1 < images.length;\n\n    return (\n        <ImageStageContainer\n            className=\"lightbox-image-stage\"\n            data-testid=\"lightbox-image-stage\"\n        >\n            {renderPrevButton({ canPrev })}\n            <ImagePager\n                currentIndex={currentIndex}\n                images={images}\n                onClose={onClose}\n                onNext={onNext}\n                onPrev={onPrev}\n                renderImageOverlay={renderImageOverlay}\n                singleClickToZoom={singleClickToZoom}\n            />\n            {renderNextButton({ canNext })}\n        </ImageStageContainer>\n    );\n};\n\nexport default ImageStage;\n\nconst ImageStageContainer = styled.div`\n    flex-grow: 1;\n    position: relative;\n    height: 100%;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n","import React from 'react';\nimport { useTransition, animated, config } from '@react-spring/web';\nimport styled from 'styled-components';\n\ntype IPageContainerProps = {\n    /** All child components of Lightbox */\n    children: React.ReactNode[];\n    /** Classes are applied to the root lightbox component */\n    className: string;\n    /** Flag that dictates if the lightbox is open or closed */\n    isOpen: boolean;\n    /** React-Spring useTransition config for page open/close animation */\n    pageTransitionConfig: any;\n    /** Inline styles are applied to the root lightbox component */\n    style: React.CSSProperties;\n};\n\n/**\n * Animates the lightbox as it opens/closes\n */\nconst PageContainer = ({\n    children,\n    className,\n    isOpen,\n    pageTransitionConfig,\n    style,\n}: IPageContainerProps) => {\n    const defaultTransition = {\n        config: { ...config.default, friction: 32, mass: 1, tension: 320 },\n        enter: { opacity: 1, transform: 'scale(1)' },\n        from: { opacity: 0, transform: 'scale(0.75)' },\n        leave: { opacity: 0, transform: 'scale(0.75)' },\n    };\n\n    const transitions = useTransition(isOpen, {\n        ...defaultTransition,\n        ...pageTransitionConfig,\n    });\n\n    return (\n        <>\n            {transitions(\n                (animatedStyles, item) =>\n                    item && (\n                        <AnimatedPageContainer\n                            className={`lightbox-container${\n                                className ? ` ${className}` : ''\n                            }`}\n                            data-testid=\"lightbox-container\"\n                            style={{ ...animatedStyles, ...style }}\n                        >\n                            {children}\n                        </AnimatedPageContainer>\n                    )\n            )}\n        </>\n    );\n};\n\nexport default PageContainer;\n\nconst AnimatedPageContainer = styled(animated.div)`\n    display: flex;\n    flex-direction: column;\n    position: fixed;\n    z-index: 400;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n`;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\ntype ICreatePortal = {\n    children: React.ReactNode;\n};\n\n/**\n * Creates a SSR + next.js friendly React Portal inside <body />\n *\n * Child components are rendered on the client side only\n\n * @see https://reactjs.org/docs/portals.html\n */\nclass CreatePortal extends React.Component<ICreatePortal> {\n    portalContainer: HTMLDivElement;\n    body: HTMLElement;\n\n    // Only executes on the client-side\n    componentDidMount() {\n        // Get the document body\n        this.body = document.body;\n\n        // Create a container <div /> for React Portal\n        this.portalContainer = document.createElement('div');\n        this.portalContainer.setAttribute('class', 'lightbox-portal');\n\n        // Append the container to the document body\n        this.body.appendChild(this.portalContainer);\n\n        // Force a re-render as we're on the client side now\n        // children prop will render to portalContainer\n        this.forceUpdate();\n\n        // Add event listener to prevent trackpad/ctrl+mousewheel zooming of lightbox\n        // Zooming is handled specifically within /ImageStage/components/Image\n        this.portalContainer.addEventListener('wheel', this.preventWheel);\n    }\n\n    componentWillUnmount() {\n        // Remove wheel event listener\n        this.portalContainer.removeEventListener('wheel', this.preventWheel);\n\n        // Cleanup Portal from DOM\n        this.body.removeChild(this.portalContainer);\n    }\n\n    preventWheel = (e: WheelEvent) => e.preventDefault();\n\n    render(): React.ReactPortal | null {\n        // Return null during SSR\n        if (this.portalContainer === undefined) return null;\n\n        const { children } = this.props;\n\n        return ReactDOM.createPortal(children, this.portalContainer);\n    }\n}\n\nexport default CreatePortal;\n","import React, { useEffect } from 'react';\nimport { ImageStage, PageContainer, CreatePortal } from './components';\nimport type { ImagesList } from './types/ImagesList';\n\nexport type ImagesListType = ImagesList;\n\ntype ILightboxProps = {\n    /** classnames are applied to the root lightbox component */\n    className?: string;\n    /** Index of image in images array that is currently shown */\n    currentIndex: number;\n    /** Array of images to be shown in Lightbox, each image object may contain any valid 'img' attribute with the exceptions of 'draggable', 'onClick', 'onDragStart' and 'ref' */\n    images: ImagesList;\n    /** Flag that dictates if the lightbox is open or closed */\n    isOpen: boolean;\n    /** Function that closes the Lightbox */\n    onClose: () => void;\n    /** Function that changes currentIndex to next image in images */\n    onNext: () => void;\n    /** Function that changes currentIndex to previous image in images */\n    onPrev: () => void;\n    /** React-Spring useTransition config for page open/close animation */\n    pageTransitionConfig?: any;\n    /** A React component that renders below the image pager */\n    renderFooter?: () => React.ReactNode;\n    /** A React component that renders above the image pager */\n    renderHeader?: () => React.ReactNode;\n    /** A React component that renders inside the image stage, useful for making overlays over the image */\n    renderImageOverlay?: () => React.ReactNode;\n    /** A React component that is used for next button in image pager */\n    renderNextButton?: () => React.ReactNode;\n    /** A React component that is used for previous button in image pager */\n    renderPrevButton?: () => React.ReactNode;\n    /** Overrides the default behavior of double clicking causing an image zoom to a single click */\n    singleClickToZoom?: boolean;\n    /** Inline styles that are applied to the root lightbox component */\n    style?: React.CSSProperties;\n};\n\n/**\n * Gesture controlled lightbox that interpolates animations with spring physics.\n *\n * Demos and docs:\n * @see https://timellenberger.com/libraries/react-spring-lightbox\n *\n * GitHub repo:\n * @see https://github.com/tim-soft/react-spring-lightbox\n *\n * Built with:\n * @see https://github.com/react-spring/react-use-gesture\n * @see https://github.com/react-spring/react-spring\n * @see https://github.com/styled-components/styled-components\n */\nconst Lightbox = ({\n    isOpen,\n    onClose,\n    images = [],\n    currentIndex,\n    onPrev,\n    onNext,\n    renderHeader = () => null,\n    renderFooter = () => null,\n    renderPrevButton = () => null,\n    renderNextButton = () => null,\n    renderImageOverlay = () => null,\n    className = '',\n    singleClickToZoom = false,\n    style = {},\n    pageTransitionConfig = null,\n}: ILightboxProps) => {\n    // Handle event listeners for keyboard\n    useEffect(() => {\n        /**\n         * Prevent keyboard from controlling background page\n         * when lightbox is open\n         */\n        const preventBackgroundScroll = (e: KeyboardEvent) => {\n            const keysToIgnore = [\n                'ArrowUp',\n                'ArrowDown',\n                'End',\n                'Home',\n                'PageUp',\n                'PageDown',\n            ];\n\n            if (isOpen && keysToIgnore.includes(e.key)) e.preventDefault();\n        };\n\n        /**\n         * Navigate images with arrow keys, close on Esc key\n         */\n        const handleKeyboardInput = (e: KeyboardEvent) => {\n            if (isOpen) {\n                switch (e.key) {\n                    case 'ArrowLeft':\n                        onPrev();\n                        break;\n                    case 'ArrowRight':\n                        onNext();\n                        break;\n                    case 'Escape':\n                        onClose();\n                        break;\n                    default:\n                        e.preventDefault();\n                        break;\n                }\n            }\n        };\n\n        document.addEventListener('keyup', handleKeyboardInput);\n        document.addEventListener('keydown', preventBackgroundScroll);\n\n        return () => {\n            document.removeEventListener('keyup', handleKeyboardInput);\n            document.removeEventListener('keydown', preventBackgroundScroll);\n        };\n    });\n\n    return (\n        <CreatePortal>\n            <PageContainer\n                className={className}\n                isOpen={isOpen}\n                pageTransitionConfig={pageTransitionConfig}\n                style={style}\n            >\n                {renderHeader()}\n                <ImageStage\n                    currentIndex={currentIndex}\n                    images={images}\n                    onClose={onClose}\n                    onNext={onNext}\n                    onPrev={onPrev}\n                    renderImageOverlay={renderImageOverlay}\n                    renderNextButton={renderNextButton}\n                    renderPrevButton={renderPrevButton}\n                    singleClickToZoom={singleClickToZoom}\n                />\n                {renderFooter()}\n            </PageContainer>\n        </CreatePortal>\n    );\n};\n\nexport default Lightbox;\n"]},"metadata":{},"sourceType":"module"}