{"ast":null,"code":"var _jsxFileName = \"/Users/jungdaljean/Downloads/thru/frontend1/src/components/components/ColumnItem.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport QRCode from 'qrcode';\nimport { Modal, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MyVerticallyCenteredModal = props => {\n  const {\n    qrurl,\n    imgurl\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Modal, { ...props,\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title-vcenter\",\n    centered: true,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: imgurl,\n        className: \"qr_img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: qrurl,\n        className: \"qr_img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: props.onHide,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 7\n  }, this);\n};\n\n_c = MyVerticallyCenteredModal;\n\nconst ColumnItem = props => {\n  _s();\n\n  const {\n    contract,\n    tokenId,\n    ownerAddress,\n    originUrl,\n    name,\n    description\n  } = props.nft;\n  const [modalShow, setModalShow] = React.useState(false);\n  const [qrUrl, setQrUrl] = useState('');\n\n  const generateQrCode = async () => {\n    try {\n      const respone = await QRCode.toDataURL(\"conAdr=\" + contract + \"&tokenId=\" + tokenId);\n      setQrUrl(respone);\n      setModalShow(true);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-item col-lg-3 col-md-6 col-sm-6 col-xs-12 mb-4\",\n      onClick: generateQrCode,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nft__item m-0\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nft__item_wrap\",\n          style: {\n            height: `${state.height}px`\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              onLoad: onImgLoad,\n              src: originUrl,\n              className: \"lazy nft__item_preview\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nft__item_info\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: nft.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyVerticallyCenteredModal, {\n      show: modalShow,\n      onHide: () => setModalShow(false),\n      qrurl: qrUrl,\n      imgurl: originUrl\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ColumnItem, \"zGOtwHcNIPkLgpQx3GvlDqyqCTc=\");\n\n_c2 = ColumnItem;\nexport default ColumnItem;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MyVerticallyCenteredModal\");\n$RefreshReg$(_c2, \"ColumnItem\");","map":{"version":3,"sources":["/Users/jungdaljean/Downloads/thru/frontend1/src/components/components/ColumnItem.js"],"names":["React","useState","QRCode","Modal","Button","MyVerticallyCenteredModal","props","qrurl","imgurl","onHide","ColumnItem","contract","tokenId","ownerAddress","originUrl","name","description","nft","modalShow","setModalShow","qrUrl","setQrUrl","generateQrCode","respone","toDataURL","error","console","log","height","state","onImgLoad"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,iBAA9B;;;;AAEA,MAAMC,yBAAyB,GAAIC,KAAD,IAAW;AACzC,QAAM;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,MAAkBF,KAAxB;AAEA,sBACE,QAAC,KAAD,OACMA,KADN;AAEE,IAAA,IAAI,EAAC,IAFP;AAGE,uBAAgB,+BAHlB;AAIE,IAAA,QAAQ,MAJV;AAAA,4BAME,QAAC,KAAD,CAAO,IAAP;AAAA,8BACI;AAAK,QAAA,GAAG,EAAEE,MAAV;AAAkB,QAAA,SAAS,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,GAAG,EAAED,KAAV;AAAiB,QAAA,SAAS,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAUE,QAAC,KAAD,CAAO,MAAP;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAED,KAAK,CAACG,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBH,CAnBD;;KAAMJ,yB;;AAqBN,MAAMK,UAAU,GAAIJ,KAAD,IAAW;AAAA;;AAC1B,QAAM;AAAEK,IAAAA,QAAF;AAAYC,IAAAA,OAAZ;AAAqBC,IAAAA,YAArB;AAAmCC,IAAAA,SAAnC;AAA8CC,IAAAA,IAA9C;AAAoDC,IAAAA;AAApD,MAAoEV,KAAK,CAACW,GAAhF;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BnB,KAAK,CAACC,QAAN,CAAe,KAAf,CAAlC;AACA,QAAM,CAAEmB,KAAF,EAASC,QAAT,IAAsBpB,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMqB,cAAc,GAAG,YAAY;AACjC,QAAI;AACF,YAAMC,OAAO,GAAG,MAAMrB,MAAM,CAACsB,SAAP,CAAiB,YAAYb,QAAZ,GAAuB,WAAvB,GAAqCC,OAAtD,CAAtB;AACAS,MAAAA,QAAQ,CAACE,OAAD,CAAR;AACAJ,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,KAJD,CAIE,OAAOM,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,GARD;;AAUA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,kDAAf;AAAkE,MAAA,OAAO,EAAEH,cAA3E;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAgC,UAAA,KAAK,EAAE;AAACM,YAAAA,MAAM,EAAG,GAAEC,KAAK,CAACD,MAAO;AAAzB,WAAvC;AAAA,iCACI;AAAA,mCACI;AAAK,cAAA,MAAM,EAAEE,SAAb;AAAwB,cAAA,GAAG,EAAEhB,SAA7B;AAAwC,cAAA,SAAS,EAAC,wBAAlD;AAA2E,cAAA,GAAG,EAAC;AAA/E;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,iCACI;AAAA,mCACI;AAAA,wBAAKG,GAAG,CAACF;AAAT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAeI,QAAC,yBAAD;AAA2B,MAAA,IAAI,EAAEG,SAAjC;AAA4C,MAAA,MAAM,EAAE,MAAMC,YAAY,CAAC,KAAD,CAAtE;AAA+E,MAAA,KAAK,EAAEC,KAAtF;AAA6F,MAAA,MAAM,EAAEN;AAArG;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA,kBADJ;AAmBH,CAlCD;;GAAMJ,U;;MAAAA,U;AAoCN,eAAeA,UAAf","sourcesContent":["import React, {useState} from 'react';\nimport QRCode from 'qrcode'\nimport { Modal, Button } from 'react-bootstrap';\n\nconst MyVerticallyCenteredModal = (props) => {\n    const {qrurl, imgurl} = props;\n\n    return (\n      <Modal\n        {...props}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Body>\n            <img src={imgurl} className=\"qr_img\" /> \n            <img src={qrurl} className=\"qr_img\" /> \n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={props.onHide}>Close</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n}\n\nconst ColumnItem = (props) => {\n    const { contract, tokenId, ownerAddress, originUrl, name, description } = props.nft;\n    const [modalShow, setModalShow] = React.useState(false);\n    const [ qrUrl, setQrUrl ] = useState('');\n\n    const generateQrCode = async () => {\n      try {\n        const respone = await QRCode.toDataURL(\"conAdr=\" + contract + \"&tokenId=\" + tokenId);\n        setQrUrl(respone);\n        setModalShow(true);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    return (\n        <>\n            <div className=\"d-item col-lg-3 col-md-6 col-sm-6 col-xs-12 mb-4\" onClick={generateQrCode}>\n                <div className=\"nft__item m-0\">\n                    <div className=\"nft__item_wrap\" style={{height: `${state.height}px`}}>\n                        <span>\n                            <img onLoad={onImgLoad} src={originUrl} className=\"lazy nft__item_preview\" alt=\"\"/>\n                        </span>\n                    </div>\n                    <div className=\"nft__item_info\">\n                        <span>\n                            <h4>{nft.name}</h4>\n                        </span>\n                    </div> \n                </div>\n            </div>\n            <MyVerticallyCenteredModal show={modalShow} onHide={() => setModalShow(false)} qrurl={qrUrl} imgurl={originUrl}/>\n        </>\n    );\n};\n\nexport default ColumnItem;"]},"metadata":{},"sourceType":"module"}