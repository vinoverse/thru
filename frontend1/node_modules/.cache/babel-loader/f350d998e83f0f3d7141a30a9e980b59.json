{"ast":null,"code":"var _jsxFileName = \"/Users/jungdaljean/Downloads/thru/frontend1/src/components/components/ImageGallery/components/ImageMosaic/components/GridImage.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n/**\r\n * A single image element in a masonry style image grid\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GridImage = ({\n  key,\n  index,\n  left,\n  top,\n  photo,\n  onClick\n}) => {\n  const {\n    height,\n    width,\n    src,\n    alt,\n    caption\n  } = photo;\n  return /*#__PURE__*/_jsxDEV(ImageContainer, {\n    className: \"ConMainGimg\",\n    index: index,\n    onClick: e => onClick(e, {\n      index\n    }),\n    style: {\n      left,\n      top,\n      height,\n      width\n    },\n    children: /*#__PURE__*/_jsxDEV(OverlayContainer, {\n      className: \"MainGimg\",\n      children: [/*#__PURE__*/_jsxDEV(Image, {\n        src: src,\n        alt: alt,\n        caption: caption\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Caption, {\n        className: \"overlayCap\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: caption\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, `${key}-${index}`, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_c = GridImage;\nGridImage.propTypes = {\n  key: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  left: PropTypes.number.isRequired,\n  top: PropTypes.number.isRequired,\n  containerHeight: PropTypes.number.isRequired,\n  onClick: PropTypes.func.isRequired,\n  photo: PropTypes.shape({\n    alt: PropTypes.string.isRequired,\n    caption: PropTypes.string.isRequired,\n    height: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    src: PropTypes.string.isRequired\n  }).isRequired\n};\nexport default GridImage;\nconst Caption = styled.div`\n  position: absolute;\n`;\n_c2 = Caption;\nconst OverlayContainer = styled.div`\n  position: relative;\n  height: 100%;\n  overflow: hidden;\n`;\n_c3 = OverlayContainer;\nconst ImageContainer = styled.div`\n  transition: border-color 0.2s linear;\n  display: block;\n  position: absolute;\n  cursor: pointer;\n  border-width: 0;\n  border-color: transparent;\n  border-style: solid;\n  :hover {\n    border-color: ${({\n  theme\n}) => theme.pageContentLinkHoverColor};\n  }\n`;\n_c4 = ImageContainer;\nconst Image = styled.img`\n  width: inherit;\n  height: inherit;\n  position: absolute;\n`;\n_c5 = Image;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"GridImage\");\n$RefreshReg$(_c2, \"Caption\");\n$RefreshReg$(_c3, \"OverlayContainer\");\n$RefreshReg$(_c4, \"ImageContainer\");\n$RefreshReg$(_c5, \"Image\");","map":{"version":3,"sources":["/Users/jungdaljean/Downloads/thru/frontend1/src/components/components/ImageGallery/components/ImageMosaic/components/GridImage.js"],"names":["React","PropTypes","styled","GridImage","key","index","left","top","photo","onClick","height","width","src","alt","caption","e","propTypes","string","isRequired","number","containerHeight","func","shape","Caption","div","OverlayContainer","ImageContainer","theme","pageContentLinkHoverColor","Image","img"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\n/**\r\n * A single image element in a masonry style image grid\r\n */\r\nconst GridImage = ({ key, index, left, top, photo, onClick }) => {\r\n  const { height, width, src, alt, caption } = photo;\r\n  return (\r\n    <ImageContainer className='ConMainGimg'\r\n      key={`${key}-${index}`}\r\n      index={index}\r\n      onClick={e => onClick(e, { index })}\r\n      style={{ left, top, height, width }}\r\n    >\r\n      <OverlayContainer className='MainGimg'>\r\n        <Image src={src} alt={alt} caption={caption} />\r\n        <Caption className='overlayCap'>\r\n          <span>{caption}</span>\r\n        </Caption>\r\n      </OverlayContainer>\r\n    </ImageContainer>\r\n  );\r\n};\r\n\r\nGridImage.propTypes = {\r\n  key: PropTypes.string.isRequired,\r\n  index: PropTypes.number.isRequired,\r\n  left: PropTypes.number.isRequired,\r\n  top: PropTypes.number.isRequired,\r\n  containerHeight: PropTypes.number.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n  photo: PropTypes.shape({\r\n    alt: PropTypes.string.isRequired,\r\n    caption: PropTypes.string.isRequired,\r\n    height: PropTypes.number.isRequired,\r\n    width: PropTypes.number.isRequired,\r\n    src: PropTypes.string.isRequired\r\n  }).isRequired\r\n};\r\n\r\nexport default GridImage;\r\n\r\nconst Caption = styled.div`\r\n  position: absolute;\r\n`;\r\n\r\nconst OverlayContainer = styled.div`\r\n  position: relative;\r\n  height: 100%;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  transition: border-color 0.2s linear;\r\n  display: block;\r\n  position: absolute;\r\n  cursor: pointer;\r\n  border-width: 0;\r\n  border-color: transparent;\r\n  border-style: solid;\r\n  :hover {\r\n    border-color: ${({ theme }) => theme.pageContentLinkHoverColor};\r\n  }\r\n`;\r\n\r\nconst Image = styled.img`\r\n  width: inherit;\r\n  height: inherit;\r\n  position: absolute;\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}