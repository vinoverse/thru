{"ast":null,"code":"var _jsxFileName = \"/Users/jungdaljean/Downloads/thru/frontend1/src/components/components/ColumnNew.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useSelector } from 'react-redux';\nimport { Redirect } from '@reach/router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ColumnNew = () => {\n  _s();\n\n  const {\n    account,\n    domain\n  } = useSelector(store => store);\n  const [nftList, setNftList] = useState([]);\n  const [state, setState] = useState({\n    nfts: [],\n    height: 0\n  });\n\n  if (!account) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      noThrow: true,\n      to: \"/explore\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 16\n    }, this);\n  }\n\n  useEffect(() => {\n    fetch(domain + \"/api/user/nfts/\" + account).then(res => res.json()).then(res => {\n      setNftList(res[\"result\"]);\n    });\n  }, []);\n  useEffect(() => {\n    if (!!nftList) {\n      setState({ ...state,\n        nfts: [...nftList.slice(0, 8)]\n      });\n    }\n  }, [nftList]);\n\n  const loadMore = () => {\n    let nftState = state.nfts;\n    let start = nftState.length;\n    let end = nftState.length + 4;\n    setState({ ...state,\n      nfts: [...nftState, ...nftList.slice(start, end)]\n    });\n  };\n\n  const onImgLoad = event => {\n    let img = event.target;\n    let currentHeight = state.height;\n\n    if (currentHeight < img.offsetHeight) {\n      setState({ ...state,\n        height: img.offsetHeight\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: [state.nfts.map((nft, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-item col-lg-3 col-md-6 col-sm-6 col-xs-12 mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nft__item m-0\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nft__item_wrap\",\n          style: {\n            height: `${state.height}px`\n          },\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              onLoad: onImgLoad,\n              src: nft.originUrl,\n              className: \"lazy nft__item_preview\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"nft__item_info\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: nft.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this)), state.nfts.length !== nftList.length && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-lg-12\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spacer-single\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => loadMore(),\n        className: \"btn-main lead m-auto\",\n        children: \"Load More\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ColumnNew, \"6GkV8i4OXScZBhOevGQqJq9TX3Y=\", false, function () {\n  return [useSelector];\n});\n\n_c = ColumnNew;\nexport default ColumnNew;\n\nvar _c;\n\n$RefreshReg$(_c, \"ColumnNew\");","map":{"version":3,"sources":["/Users/jungdaljean/Downloads/thru/frontend1/src/components/components/ColumnNew.js"],"names":["React","useState","useEffect","useSelector","Redirect","ColumnNew","account","domain","store","nftList","setNftList","state","setState","nfts","height","fetch","then","res","json","slice","loadMore","nftState","start","length","end","onImgLoad","event","img","target","currentHeight","offsetHeight","map","nft","index","originUrl","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSelector } from 'react-redux';\nimport { Redirect } from '@reach/router';\n\nconst ColumnNew = () => {\n    const {account, domain} = useSelector((store) => store);\n    const [nftList, setNftList] = useState([]);\n    const [state, setState] = useState({\n        nfts: [],\n        height: 0\n    });\n\n    if (!account) {\n        return <Redirect noThrow={true} to=\"/explore\"/>;\n    }\n\n    useEffect(() => {\n        fetch(domain + \"/api/user/nfts/\" + account).then((res) => res.json()).then((res) => {\n            setNftList(res[\"result\"]);\n        });\n    }, []);\n\n    useEffect(() => {\n        if (!!nftList) {\n            setState({...state, nfts: [...(nftList.slice(0, 8))]});\n        }\n        \n    }, [nftList]);\n\n\n    const loadMore = () => {\n        let nftState = state.nfts;\n        let start = nftState.length;\n        let end = nftState.length+4;\n        setState({...state, nfts: [...nftState, ...(nftList.slice(start, end))]})\n    }\n\n    \n    const onImgLoad = (event) => {\n        let img = event.target;\n        let currentHeight = state.height;\n        if(currentHeight < img.offsetHeight) {\n            setState({...state, height: img.offsetHeight})\n        }\n    }\n\n\n    return (\n        <div className='row'> \n            {state.nfts.map((nft, index) => ( \n                <div key={index} className=\"d-item col-lg-3 col-md-6 col-sm-6 col-xs-12 mb-4\">\n                <div className=\"nft__item m-0\">\n                    <div className=\"nft__item_wrap\" style={{height: `${state.height}px`}}>\n                        <span>\n                            <img onLoad={onImgLoad} src={nft.originUrl} className=\"lazy nft__item_preview\" alt=\"\"/>\n                        </span>\n                    </div>\n                    <div className=\"nft__item_info\">\n                        <span>\n                            <h4>{nft.name}</h4>\n                        </span>\n                    </div> \n                </div>\n            </div> \n            ))}\n            { state.nfts.length !== nftList.length &&\n                <div className='col-lg-12'>\n                    <div className=\"spacer-single\"></div>\n                    <span onClick={() => loadMore()} className=\"btn-main lead m-auto\">Load More</span>\n                </div>\n            }\n        </div>\n    );\n};\n\nexport default ColumnNew;"]},"metadata":{},"sourceType":"module"}